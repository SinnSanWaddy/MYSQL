=>USEFUL FUNCTIONS
*MYSQL AGGREGATE Functions
COUNT()
SUM() +
MIN()
MAX()
AVG()

=>COUNT () Syntax  'row ko pl ye dh'
NOTE::Return the number of rows in group,including rows with NULL values;

SELECT COUNT(columnname)
FROM tablename
WHERE condition;


=>SUM() Syntax "+ mr moh num fik ya ml"
NOTE:: Return the summation of all non-NULL values a set.

SELECT SUM(columnname)
FROM tablename
WHERE condition;

=>MIN() Syntax
NOTE:: Returns the lowest value in a set of non-NULL values.

SELECT MIN(columnname)
FROM tablename
WHERE condition;

=>MAX() Syntax
NOTE::Return the highest value in a set of non-NULL values.
SELECT MAX(columnname)
FROM tablename
WHERE condition;

=>AVG() Syntax 
NOTE:: Return the average of non-NULL values.

SELECT AVG(columnname)
FROM tablename
WHERE condition;
____________________________________________

EXERCISE = COUNT()

SELECT COUNT(name) FROM employees; 

SELECT COUNT(city) FROM employees;

SELECT COUNT(city) FROM employees 
WHERE city = 'yangon';

SELECT COUNT(employeeid)
FROM employees
WHERE salary > 500000


SELECT COUNT(age)
FROM employees
WHERE age > 30;

____________________________________________


EXERCISE = SUM()

SELECT SUM(salary) FROM employees;

SELECT SUM (salary) 
FROM employees
WHERE city = "yangon";

SELECT SUM (salary)
FROM employees
WHERE city = "bago";

SELECT SUM (salary)
FROM employees
WHERE city = "mandalay";

___________________________________________

EXERCISE = MIN()

SELECT * FROM employees;

SELECT MIN(salary) FROM employees;

SELECT MIN(age) FROM employees;

SELECT MIN(salary) 
FROM employees
WHERE age > 30;  ...age 30 htet kyi p get lowest salary......

SELECT COUNT(*) , MIN(salary)
FROM employees
WHERE age > 30;

___________________________________

EXERCISE = MAX()

SELECT * FROM employees;

SELECT MAX(salary) FROM employees;

SELECT MAX(age) FROM employees;

SELECT MAX(salary)
FROM employees
WHERE age > 30;

SELECT COUNT(*),MAX(salary)
FROM employees
WHERE age > 30;

...age 30 htet kyee dae thu ko count ka ye twr pee salary amyr sone ko kya max salary ka pya dl........

SELECT COUNT(*),MAX(age)
FROM employees
WHERE age > 30;


...age 30 htet kyee dae thu ko count ka ye twr pee age a kye sone ko kya max age ka pya dl........


*error
SELECT MAX(salary),name FROM employees;
 
SELECT * FROM employees
WHERE salary = 90000;

SELECT name,salary,city FROM employees
WHERE salary = (SELECT MAX(salary) FROM employees));


SELECT * FROM employees
WHERE salary = (SELECT MAX(salary) FROM employees);

___________________________________

EXERCISE = AVG() total/qty nk srr 

SELECT * FROM employees;

SELECT AVG() FROM employees;

SELECT SUM(salary)
FROM employees
WHERE age > 30;

SELECT AVG(salary)
FROM employees;
WHERE age > 30;

_____________________________________

=>IF() Function
=Syntax
IF(condition,true,false);

SELECT IF(100 > 20,'TRUE','FASLE');
SELECT IF(100 < 20,'TRUE','FALSE');

SELECT * FROM employees;

SELECT name,age,salary,
 IF(age >=,'Elder','Young')AS 'age verify'
FROM employees;

______________________________________________

=>TRUNCATE()Function( ho turcate nk bh mha m sine)
(turncate ka shae ko 1 m toe wo youk dae ny yr ka tann phyt cha htr dl)
=Syntax
TRUNCATE(name,decimals)


*result = 123.342
SELECT TRUNCATE(123.342,3)
SELECT TRUNCATE(123.342,5);

*result = 123.34
SELECT TRUNCATE(123.342,2);
SELECT TRUNCATE(123.356,2); //shae ko 1 m toe bh

*result = 123.3
SELECT TRUNCATE(123.342,1);
SELECT TRUNCATE(123.356,1);

*result = 123
SELECT TRUNCATE(123.342,0);
SELECT TRUNCATE(123.678,0);

SELECT * FROM items;

SELECT name,price,
   TRUNCATE(price,0)AS 'integer'
FROM items;

SELECT name,price,
   TRUNCATE(price,1)AS 'integer'
FROM items;

___________________________________

=>FLOOR() Function
FLOOR(number);

*result = 123
SELECT FLOOR(123.342);
SELECT FLOOR(123.678);
SELECT FLOOR(123);

SELECT * FROM items;

SELECT name,price
      TRUNCATE(price,1);
AS 'integer' FROM items;

SELECT name,price
 FLOOR(price)
FROM items;


_____________________________________

ROUND(number,decimals); //shae ko 1 toe dl




*result = 123.342
SELECT TRUNCATE(123.342,3)
SELECT TRUNCATE(123.342,5);

*result = 123.34
SELECT TRUNCATE(123.342,2);
SELECT TRUNCATE(123.356,2); //shae ko 1 m toe bh

*result = 123.3
SELECT TRUNCATE(123.342,1);

*result = 123.4
SELECT TRUNCATE(123.356,1);

*result = 123
SELECT TRUNCATE(123.342,0);

*result = 124
SELECT TRUNCATE(123.678,0);

SELECT * FROM items;

SELECT name,price,
   ROUND(price,1) AS 'integer'
FROM items;

SELECT name,price,
   ROUND(price,1)AS 'integer'
FROM items;

___________________________________

=>CEIL() CEILING() Function
//nouk ka decmial 1 ku ku pr lyk dh nk 1 toe p
CEIL(number);
CEILING(number);

*result = 124
SELECT CEIL(123.342);
SELECT CEILING(123.678);
*result = 123
SELECT CEIL(123);

SELECT * FROM items;

SELECT name,price,
 CEIL(price)
FROM items;

____________________________________________

=>ABS() FUNCTION
//a pyae kane, -100 pyy ll  100pl ya mr + pl ya mr bh pyy"
ABS(number);

*results = 123.342
SELECT ABS(-123.342);

_______________________________________________


=>SQRT() Function
SQRT(number);

*result = 7
SELECT SQRT(49);


*result = 9
SELECT SQRT(81);

_____________________________________________

=>POW() Function
POW(base,power);
//htet kane , 4(3)=64

*result = 100
SELECT POW(10,2);
*result = 64
SELECT POW(4,3);
*result = 216
SELECT POW(6,3)
_____________________________________________

=>SIGN () Function
SIGN(number);

nunber > 0 return = 1
nunber < 0 return = -1
nunber = 0 return = 0


*result = 1
SELECT SIGN(500);
*result = -1
SELECT SIGN(-500);
*result = 0
SELECT SIGN(0);